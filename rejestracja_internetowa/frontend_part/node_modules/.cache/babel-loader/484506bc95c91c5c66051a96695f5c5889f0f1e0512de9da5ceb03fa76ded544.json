{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pojemnik danych\\\\studia\\\\PWR\\\\Pycharm\\\\Bazy_danych_projekt\\\\rejestracja_internetowa\\\\frontend_part\\\\src\\\\components\\\\Rejestracja.js\",\n  _s = $RefreshSig$();\n// /src/components/Rejestracja.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rejestracja = () => {\n  _s();\n  const [etapRejestracji, setEtapRejestracji] = useState(1);\n  const [nowyPacjent, setNowyPacjent] = useState({\n    imie: '',\n    nazwisko: '',\n    pesel: '',\n    data_urodzenia: '',\n    adres: '',\n    email: '',\n    haslo: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNowyPacjent(prevPacjent => ({\n      ...prevPacjent,\n      [name]: value\n    }));\n  };\n  const zarejestrujPacjenta = () => {\n    axios.post('http://localhost:8000/api/rejestracja/', nowyPacjent).then(response => {\n      console.log(\"Pacjent zarejestrowany:\", response.data);\n      // Przekieruj użytkownika na stronę logowania lub potwierdzenia rejestracji\n      setEtapRejestracji(2);\n    }).catch(error => console.error('Błąd rejestracji pacjenta:', error));\n  };\n  const renderujEtapRejestracji = () => {\n    switch (etapRejestracji) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Rejestracja Pacjenta - Etap 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: zarejestrujPacjenta,\n              children: \"Zarejestruj Pacjenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Rejestracja Pacjenta - Potwierdzenie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Dzi\\u0119kujemy za rejestracj\\u0119!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderujEtapRejestracji()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Rejestracja, \"rqo/aZtUbaDxZchoRsci6fGVROU=\");\n_c = Rejestracja;\nexport default Rejestracja;\nvar _c;\n$RefreshReg$(_c, \"Rejestracja\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Rejestracja","_s","etapRejestracji","setEtapRejestracji","nowyPacjent","setNowyPacjent","imie","nazwisko","pesel","data_urodzenia","adres","email","haslo","handleInputChange","e","name","value","target","prevPacjent","zarejestrujPacjenta","post","then","response","console","log","data","catch","error","renderujEtapRejestracji","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["E:/Pojemnik danych/studia/PWR/Pycharm/Bazy_danych_projekt/rejestracja_internetowa/frontend_part/src/components/Rejestracja.js"],"sourcesContent":["// /src/components/Rejestracja.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Rejestracja = () => {\r\n  const [etapRejestracji, setEtapRejestracji] = useState(1);\r\n  const [nowyPacjent, setNowyPacjent] = useState({\r\n    imie: '',\r\n    nazwisko: '',\r\n    pesel: '',\r\n    data_urodzenia: '',\r\n    adres: '',\r\n    email: '',\r\n    haslo: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNowyPacjent((prevPacjent) => ({\r\n      ...prevPacjent,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const zarejestrujPacjenta = () => {\r\n    axios.post('http://localhost:8000/api/rejestracja/', nowyPacjent)\r\n      .then(response => {\r\n        console.log(\"Pacjent zarejestrowany:\", response.data);\r\n        // Przekieruj użytkownika na stronę logowania lub potwierdzenia rejestracji\r\n        setEtapRejestracji(2);\r\n      })\r\n      .catch(error => console.error('Błąd rejestracji pacjenta:', error));\r\n  };\r\n\r\n  const renderujEtapRejestracji = () => {\r\n    switch (etapRejestracji) {\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h2>Rejestracja Pacjenta - Etap 1</h2>\r\n            <form>\r\n              {/* ... formularz dla etapu 1 */}\r\n              <button type=\"button\" onClick={zarejestrujPacjenta}>Zarejestruj Pacjenta</button>\r\n            </form>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h2>Rejestracja Pacjenta - Potwierdzenie</h2>\r\n            <p>Dziękujemy za rejestrację!</p>\r\n            {/* Możesz dodać przycisk do przekierowania na stronę logowania */}\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderujEtapRejestracji()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rejestracja;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAC7CU,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCZ,cAAc,CAAEa,WAAW,KAAM;MAC/B,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCtB,KAAK,CAACuB,IAAI,CAAC,wCAAwC,EAAEhB,WAAW,CAAC,CAC9DiB,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACrD;MACAtB,kBAAkB,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDuB,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,QAAQ1B,eAAe;MACrB,KAAK,CAAC;QACJ,oBACEH,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAI;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtClC,OAAA;YAAA8B,QAAA,eAEE9B,OAAA;cAAQmC,IAAI,EAAC,QAAQ;cAACC,OAAO,EAAEhB,mBAAoB;cAAAU,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAEV,KAAK,CAAC;QACJ,oBACElC,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAI;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7ClC,OAAA;YAAA8B,QAAA,EAAG;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE9B,CAAC;MAEV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACElC,OAAA;IAAA8B,QAAA,EACGD,uBAAuB,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAChC,EAAA,CA5DID,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}