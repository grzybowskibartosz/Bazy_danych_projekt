{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\PycharmProjects\\\\bazy danych v1.0\\\\rejestracja_internetowa\\\\frontend_part\\\\src\\\\Rezerwacje.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Rezerwacje = () => {\n  _s();\n  const [pacjent, setPacjent] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState({}); // Dodaj zmienną userInfo\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (authToken) {\n          // Pobierz informacje o użytkowniku na podstawie tokena\n          const response = await axios.get('http://localhost:8000/api/get_user_info/', {\n            headers: {\n              Authorization: `Token ${authToken}`\n            }\n          });\n          const userInfo = response.data;\n\n          // Ustaw dane pacjenta\n          setPacjent(userInfo.user_data);\n          console.log(userInfo);\n          console.log(userInfo.user_data);\n\n          // Zakończ ładowanie\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Błąd pobierania informacji o użytkowniku:', error);\n      }\n    };\n    fetchData();\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pacjent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rezerwacja wizyty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Informacje o pacjencie:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Imi\\u0119: \", pacjent.imie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nazwisko: \", pacjent.nazwisko]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data urodzenia: \", pacjent.data_urodzenia]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adres zamieszkania: \", pacjent.adres]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"PESEL: \", pacjent.pesel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Inne informacje: \", pacjent.inne_informacje]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Rezerwacje, \"pGhXg2U5+3haHUqEndWZEYdpgQo=\");\n_c = Rezerwacje;\nexport default Rezerwacje;\nvar _c;\n$RefreshReg$(_c, \"Rezerwacje\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Rezerwacje","_s","pacjent","setPacjent","loading","setLoading","userInfo","setUserInfo","fetchData","authToken","localStorage","getItem","response","get","headers","Authorization","data","user_data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","imie","nazwisko","data_urodzenia","adres","pesel","inne_informacje","_c","$RefreshReg$"],"sources":["C:/Users/barto/PycharmProjects/bazy danych v1.0/rejestracja_internetowa/frontend_part/src/Rezerwacje.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Rezerwacje = () => {\r\n  const [pacjent, setPacjent] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [userInfo, setUserInfo] = useState({}); // Dodaj zmienną userInfo\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const authToken = localStorage.getItem('authToken');\r\n\r\n        if (authToken) {\r\n          // Pobierz informacje o użytkowniku na podstawie tokena\r\n          const response = await axios.get('http://localhost:8000/api/get_user_info/', {\r\n            headers: {\r\n              Authorization: `Token ${authToken}`,\r\n            },\r\n          });\r\n          const userInfo = response.data;\r\n\r\n          // Ustaw dane pacjenta\r\n          setPacjent(userInfo.user_data);\r\n\r\n          console.log(userInfo);\r\n          console.log(userInfo.user_data);\r\n\r\n          // Zakończ ładowanie\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Błąd pobierania informacji o użytkowniku:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\r\n\r\n  if (loading) {\r\n    return <p>Ładowanie danych...</p>;\r\n  }\r\n\r\nreturn (\r\n  <>\r\n    {pacjent && (\r\n      <>\r\n        <h1>Rezerwacja wizyty</h1>\r\n        <p>Informacje o pacjencie:</p>\r\n        <p>Imię: {pacjent.imie}</p>\r\n        <p>Nazwisko: {pacjent.nazwisko}</p>\r\n        <p>Data urodzenia: {pacjent.data_urodzenia}</p>\r\n        <p>Adres zamieszkania: {pacjent.adres}</p>\r\n        <p>PESEL: {pacjent.pesel}</p>\r\n        <p>Inne informacje: {pacjent.inne_informacje}</p>\r\n      </>\r\n    )}\r\n  </>\r\n);\r\n\r\n};\r\n\r\nexport default Rezerwacje;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}