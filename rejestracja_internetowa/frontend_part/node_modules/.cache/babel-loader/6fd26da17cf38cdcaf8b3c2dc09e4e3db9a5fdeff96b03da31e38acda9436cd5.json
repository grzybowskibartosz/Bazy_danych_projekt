{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\PycharmProjects\\\\bazy danych v1.0\\\\rejestracja_internetowa\\\\frontend_part\\\\src\\\\DostepneTerminy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DostepneTerminy = () => {\n  _s();\n  const {\n    lekarzId\n  } = useParams();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [dostepneTerminy, setDostepneTerminy] = useState([]);\n  useEffect(() => {\n    if (lekarzId) {\n      const rok = selectedDate.getFullYear();\n      const miesiac = selectedDate.getMonth() + 1;\n      const dzien = selectedDate.getDate();\n      axios.get(`http://localhost:8000/api/zajete-terminy/${lekarzId}/${rok}/${miesiac}/${dzien}/`).then(response => {\n        const zajeteTerminy = response.data.zajete_terminy.map(date => new Date(date));\n        const wszystkieTerminy = generujWszystkieTerminy(selectedDate);\n        const dostepneTerminy = wszystkieTerminy.filter(termin => !czyTerminJestZajety(termin, zajeteTerminy));\n        setDostepneTerminy(dostepneTerminy);\n      }).catch(error => console.error('Błąd pobierania dostępnych terminów:', error));\n    }\n  }, [lekarzId, selectedDate]);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const generujWszystkieTerminy = selectedDate => {\n    const terminy = [];\n    const startHour = 8;\n    const endHour = 16;\n    const intervalMinutes = 20;\n    for (let hour = startHour; hour < endHour; hour++) {\n      for (let minute = 0; minute < 60; minute += intervalMinutes) {\n        const termin = new Date(selectedDate);\n        termin.setHours(hour);\n        termin.setMinutes(minute);\n        terminy.push(termin);\n      }\n    }\n    return terminy;\n  };\n  const czyTerminJestZajety = (termin, zajeteTerminy) => {\n    return zajeteTerminy.some(zajetyTermin => zajetyTermin.getTime() === termin.getTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dost\\u0119pne terminy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), dostepneTerminy.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Dost\\u0119pne terminy na \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dostepneTerminy.map((termin, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Data i godzina: \", termin.toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Brak dost\\u0119pnych termin\\xF3w na wybrany dzie\\u0144.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(DostepneTerminy, \"qORqBWGMgcuMjG+MTFb5JFG3LV4=\", false, function () {\n  return [useParams];\n});\n_c = DostepneTerminy;\nexport default DostepneTerminy;\nvar _c;\n$RefreshReg$(_c, \"DostepneTerminy\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","axios","useParams","jsxDEV","_jsxDEV","DostepneTerminy","_s","lekarzId","selectedDate","setSelectedDate","Date","dostepneTerminy","setDostepneTerminy","rok","getFullYear","miesiac","getMonth","dzien","getDate","get","then","response","zajeteTerminy","data","zajete_terminy","map","date","wszystkieTerminy","generujWszystkieTerminy","filter","termin","czyTerminJestZajety","catch","error","console","handleDateChange","terminy","startHour","endHour","intervalMinutes","hour","minute","setHours","setMinutes","push","some","zajetyTermin","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","length","toLocaleDateString","index","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/barto/PycharmProjects/bazy danych v1.0/rejestracja_internetowa/frontend_part/src/DostepneTerminy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DostepneTerminy = () => {\r\n  const { lekarzId } = useParams();\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [dostepneTerminy, setDostepneTerminy] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (lekarzId) {\r\n      const rok = selectedDate.getFullYear();\r\n      const miesiac = selectedDate.getMonth() + 1;\r\n      const dzien = selectedDate.getDate();\r\n\r\n      axios.get(`http://localhost:8000/api/zajete-terminy/${lekarzId}/${rok}/${miesiac}/${dzien}/`)\r\n        .then(response => {\r\n          const zajeteTerminy = response.data.zajete_terminy.map(date => new Date(date));\r\n          const wszystkieTerminy = generujWszystkieTerminy(selectedDate);\r\n          const dostepneTerminy = wszystkieTerminy.filter(termin => !czyTerminJestZajety(termin, zajeteTerminy));\r\n\r\n          setDostepneTerminy(dostepneTerminy);\r\n        })\r\n        .catch(error => console.error('Błąd pobierania dostępnych terminów:', error));\r\n    }\r\n  }, [lekarzId, selectedDate]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const generujWszystkieTerminy = (selectedDate) => {\r\n    const terminy = [];\r\n    const startHour = 8;\r\n    const endHour = 16;\r\n    const intervalMinutes = 20;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      for (let minute = 0; minute < 60; minute += intervalMinutes) {\r\n        const termin = new Date(selectedDate);\r\n        termin.setHours(hour);\r\n        termin.setMinutes(minute);\r\n        terminy.push(termin);\r\n      }\r\n    }\r\n\r\n    return terminy;\r\n  };\r\n\r\n  const czyTerminJestZajety = (termin, zajeteTerminy) => {\r\n    return zajeteTerminy.some(zajetyTermin => zajetyTermin.getTime() === termin.getTime());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dostępne terminy</h1>\r\n      <Calendar onChange={handleDateChange} value={selectedDate} />\r\n      {dostepneTerminy.length > 0 ? (\r\n        <div>\r\n          <h2>Dostępne terminy na {selectedDate.toLocaleDateString()}</h2>\r\n          <ul>\r\n            {dostepneTerminy.map((termin, index) => (\r\n              <li key={index}>\r\n                Data i godzina: {termin.toLocaleString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>Brak dostępnych terminów na wybrany dzień.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DostepneTerminy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}