{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\PycharmProjects\\\\bazy danych v1.0\\\\rejestracja_internetowa\\\\frontend_part\\\\src\\\\rezerwacje.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rezerwacje = () => {\n  _s();\n  const [lekarz, setLekarz] = useState({}); // Dane lekarza\n  const [gabinet, setGabinet] = useState({}); // Dane gabinetu\n  const [termin, setTermin] = useState(new Date()); // Wybrany termin\n  const [pacjent, setPacjent] = useState({}); // Dane pacjenta\n  const [opis, setOpis] = useState(''); // Opis problemu\n\n  useEffect(() => {\n    // Tutaj możesz użyć axios, aby pobrać dane lekarza, gabinetu, pacjenta itp.\n    // Przykład:\n    axios.get('http://localhost:8000/api/lekarze/1/') // Zastąp ID odpowiednim identyfikatorem lekarza\n    .then(response => setLekarz(response.data)).catch(error => console.error('Błąd pobierania danych lekarza:', error));\n    axios.get('http://localhost:8000/api/gabinety/1/') // Zastąp ID odpowiednim identyfikatorem gabinetu\n    .then(response => setGabinet(response.data)).catch(error => console.error('Błąd pobierania danych gabinetu:', error));\n    axios.get('http://localhost:8000/api/pacjenci/1/') // Zastąp ID odpowiednim identyfikatorem pacjenta\n    .then(response => setPacjent(response.data)).catch(error => console.error('Błąd pobierania danych pacjenta:', error));\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\n\n  const handleRezerwacja = () => {\n    // Przygotuj dane do wysłania na serwer\n    const dataDoWyslania = {\n      data_i_godzina: termin.toISOString(),\n      // Formatuj datę jako ISO string\n      lekarz_id: lekarz.id,\n      pacjent_id: pacjent.id,\n      opis: opis,\n      gabinet_id: gabinet.id\n    };\n\n    // Wyślij żądanie na serwer\n    axios.post('http://localhost:8000/api/rezerwacja/', dataDoWyslania).then(response => {\n      console.log(response.data.message);\n      // Tutaj możesz obsłużyć dalsze kroki po udanej rezerwacji, np. przekierowanie\n    }).catch(error => console.error('Błąd rezerwacji:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rezerwacja wizyty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Informacje:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Lekarz: \", lekarz.imie, \" \", lekarz.nazwisko]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gabinet: \", gabinet.numer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Termin: \", termin.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pacjent: \", pacjent.imie, \" \", pacjent.nazwisko]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Opis problemu:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: opis,\n      onChange: e => setOpis(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRezerwacja,\n      children: \"Zarezerwuj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(rezerwacje, \"V207faaNHcMwDjHdRS+have25Tk=\");\nexport default rezerwacje;","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","rezerwacje","_s","lekarz","setLekarz","gabinet","setGabinet","termin","setTermin","Date","pacjent","setPacjent","opis","setOpis","get","then","response","data","catch","error","console","handleRezerwacja","dataDoWyslania","data_i_godzina","toISOString","lekarz_id","id","pacjent_id","gabinet_id","post","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","imie","nazwisko","numer","toLocaleString","value","onChange","e","target","onClick"],"sources":["C:/Users/barto/PycharmProjects/bazy danych v1.0/rejestracja_internetowa/frontend_part/src/rezerwacje.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst rezerwacje = () => {\r\n  const [lekarz, setLekarz] = useState({}); // Dane lekarza\r\n  const [gabinet, setGabinet] = useState({}); // Dane gabinetu\r\n  const [termin, setTermin] = useState(new Date()); // Wybrany termin\r\n  const [pacjent, setPacjent] = useState({}); // Dane pacjenta\r\n  const [opis, setOpis] = useState(''); // Opis problemu\r\n\r\n  useEffect(() => {\r\n    // Tutaj możesz użyć axios, aby pobrać dane lekarza, gabinetu, pacjenta itp.\r\n    // Przykład:\r\n    axios.get('http://localhost:8000/api/lekarze/1/') // Zastąp ID odpowiednim identyfikatorem lekarza\r\n      .then(response => setLekarz(response.data))\r\n      .catch(error => console.error('Błąd pobierania danych lekarza:', error));\r\n\r\n    axios.get('http://localhost:8000/api/gabinety/1/') // Zastąp ID odpowiednim identyfikatorem gabinetu\r\n      .then(response => setGabinet(response.data))\r\n      .catch(error => console.error('Błąd pobierania danych gabinetu:', error));\r\n\r\n    axios.get('http://localhost:8000/api/pacjenci/1/') // Zastąp ID odpowiednim identyfikatorem pacjenta\r\n      .then(response => setPacjent(response.data))\r\n      .catch(error => console.error('Błąd pobierania danych pacjenta:', error));\r\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\r\n\r\n  const handleRezerwacja = () => {\r\n    // Przygotuj dane do wysłania na serwer\r\n    const dataDoWyslania = {\r\n      data_i_godzina: termin.toISOString(), // Formatuj datę jako ISO string\r\n      lekarz_id: lekarz.id,\r\n      pacjent_id: pacjent.id,\r\n      opis: opis,\r\n      gabinet_id: gabinet.id,\r\n    };\r\n\r\n    // Wyślij żądanie na serwer\r\n    axios.post('http://localhost:8000/api/rezerwacja/', dataDoWyslania)\r\n      .then(response => {\r\n        console.log(response.data.message);\r\n        // Tutaj możesz obsłużyć dalsze kroki po udanej rezerwacji, np. przekierowanie\r\n      })\r\n      .catch(error => console.error('Błąd rezerwacji:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Rezerwacja wizyty</h1>\r\n      <p>Informacje:</p>\r\n      <p>Lekarz: {lekarz.imie} {lekarz.nazwisko}</p>\r\n      <p>Gabinet: {gabinet.numer}</p>\r\n      <p>Termin: {termin.toLocaleString()}</p>\r\n      <p>Pacjent: {pacjent.imie} {pacjent.nazwisko}</p>\r\n      <p>Opis problemu:</p>\r\n      <textarea value={opis} onChange={(e) => setOpis(e.target.value)} />\r\n      <br />\r\n      <button onClick={handleRezerwacja}>Zarezerwuj</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default rezerwacje;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA;IACAC,KAAK,CAACgB,GAAG,CAAC,sCAAsC,CAAC,CAAC;IAAA,CAC/CC,IAAI,CAACC,QAAQ,IAAIZ,SAAS,CAACY,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;IAE1ErB,KAAK,CAACgB,GAAG,CAAC,uCAAuC,CAAC,CAAC;IAAA,CAChDC,IAAI,CAACC,QAAQ,IAAIV,UAAU,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;IAE3ErB,KAAK,CAACgB,GAAG,CAAC,uCAAuC,CAAC,CAAC;IAAA,CAChDC,IAAI,CAACC,QAAQ,IAAIL,UAAU,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,MAAMC,cAAc,GAAG;MACrBC,cAAc,EAAEhB,MAAM,CAACiB,WAAW,CAAC,CAAC;MAAE;MACtCC,SAAS,EAAEtB,MAAM,CAACuB,EAAE;MACpBC,UAAU,EAAEjB,OAAO,CAACgB,EAAE;MACtBd,IAAI,EAAEA,IAAI;MACVgB,UAAU,EAAEvB,OAAO,CAACqB;IACtB,CAAC;;IAED;IACA5B,KAAK,CAAC+B,IAAI,CAAC,uCAAuC,EAAEP,cAAc,CAAC,CAChEP,IAAI,CAACC,QAAQ,IAAI;MAChBI,OAAO,CAACU,GAAG,CAACd,QAAQ,CAACC,IAAI,CAACc,OAAO,CAAC;MAClC;IACF,CAAC,CAAC,CACDb,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC,CAAC;EAC7D,CAAC;EAED,oBACEnB,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MAAAgC,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBpC,OAAA;MAAAgC,QAAA,GAAG,UAAQ,EAAC7B,MAAM,CAACkC,IAAI,EAAC,GAAC,EAAClC,MAAM,CAACmC,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CpC,OAAA;MAAAgC,QAAA,GAAG,WAAS,EAAC3B,OAAO,CAACkC,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BpC,OAAA;MAAAgC,QAAA,GAAG,UAAQ,EAACzB,MAAM,CAACiC,cAAc,CAAC,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCpC,OAAA;MAAAgC,QAAA,GAAG,WAAS,EAACtB,OAAO,CAAC2B,IAAI,EAAC,GAAC,EAAC3B,OAAO,CAAC4B,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpC,OAAA;MAAAgC,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrBpC,OAAA;MAAUyC,KAAK,EAAE7B,IAAK;MAAC8B,QAAQ,EAAGC,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEpC,OAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpC,OAAA;MAAQ6C,OAAO,EAAExB,gBAAiB;MAAAW,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAClC,EAAA,CAxDID,UAAU;AA0DhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}