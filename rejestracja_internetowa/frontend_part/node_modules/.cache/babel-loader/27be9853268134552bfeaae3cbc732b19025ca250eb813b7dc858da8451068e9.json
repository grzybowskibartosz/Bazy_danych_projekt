{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\PycharmProjects\\\\bazy danych v1.0\\\\rejestracja_internetowa\\\\frontend_part\\\\src\\\\Rezerwacje.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rezerwacje = () => {\n  _s();\n  const [pacjent, setPacjent] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (authToken) {\n          // Pobierz informacje o użytkowniku na podstawie tokena\n          const response = await axios.get('http://localhost:8000/api/get_user_info/', {\n            headers: {\n              Authorization: `Token ${authToken}`\n            }\n          });\n          const userInfo = response.data;\n\n          // Ustaw dane pacjenta\n          setPacjent(userInfo);\n          console.log(userInfo);\n\n          // Zakończ ładowanie\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Błąd pobierania informacji o użytkowniku:', error);\n      }\n    };\n    fetchData();\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rezerwacja wizyty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Informacje o pacjencie:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Imi\\u0119: \", userInfo.userData.imie]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nazwisko: \", pacjent.nazwisko]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", pacjent.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Telefon: \", pacjent.telefon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Rezerwacje, \"IyaAlgTrb9Gp5D8kqn7VzA9KZy0=\");\n_c = Rezerwacje;\nexport default Rezerwacje;\nvar _c;\n$RefreshReg$(_c, \"Rezerwacje\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Rezerwacje","_s","pacjent","setPacjent","loading","setLoading","fetchData","authToken","localStorage","getItem","response","get","headers","Authorization","userInfo","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","userData","imie","nazwisko","email","telefon","_c","$RefreshReg$"],"sources":["C:/Users/barto/PycharmProjects/bazy danych v1.0/rejestracja_internetowa/frontend_part/src/Rezerwacje.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Rezerwacje = () => {\r\n  const [pacjent, setPacjent] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const authToken = localStorage.getItem('authToken');\r\n\r\n        if (authToken) {\r\n          // Pobierz informacje o użytkowniku na podstawie tokena\r\n          const response = await axios.get('http://localhost:8000/api/get_user_info/', {\r\n            headers: {\r\n              Authorization: `Token ${authToken}`,\r\n            },\r\n          });\r\n          const userInfo = response.data;\r\n\r\n          // Ustaw dane pacjenta\r\n          setPacjent(userInfo);\r\n\r\n          console.log(userInfo);\r\n\r\n          // Zakończ ładowanie\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Błąd pobierania informacji o użytkowniku:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Ustaw puste zależności, aby useEffect wykonał się tylko raz po zamontowaniu komponentu\r\n\r\n  if (loading) {\r\n    return <p>Ładowanie danych...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Rezerwacja wizyty</h1>\r\n      <p>Informacje o pacjencie:</p>\r\n      <p>Imię: {userInfo.userData.imie}</p>\r\n      <p>Nazwisko: {pacjent.nazwisko}</p>\r\n      <p>Email: {pacjent.email}</p>\r\n      <p>Telefon: {pacjent.telefon}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rezerwacje;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAEnD,IAAIF,SAAS,EAAE;UACb;UACA,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,0CAA0C,EAAE;YAC3EC,OAAO,EAAE;cACPC,aAAa,EAAG,SAAQN,SAAU;YACpC;UACF,CAAC,CAAC;UACF,MAAMO,QAAQ,GAAGJ,QAAQ,CAACK,IAAI;;UAE9B;UACAZ,UAAU,CAACW,QAAQ,CAAC;UAEpBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;;UAErB;UACAT,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAEDZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC;EAEA,oBACExB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA;MAAAoB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9BxB,OAAA;MAAAoB,QAAA,GAAG,aAAM,EAACL,QAAQ,CAACU,QAAQ,CAACC,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCxB,OAAA;MAAAoB,QAAA,GAAG,YAAU,EAACjB,OAAO,CAACwB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCxB,OAAA;MAAAoB,QAAA,GAAG,SAAO,EAACjB,OAAO,CAACyB,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA;MAAAoB,QAAA,GAAG,WAAS,EAACjB,OAAO,CAAC0B,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}