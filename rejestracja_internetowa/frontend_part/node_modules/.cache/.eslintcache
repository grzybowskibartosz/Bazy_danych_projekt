[{"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\index.js":"1","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\App.js":"2","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\reportWebVitals.js":"3","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\TestComponent.js":"4","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\HomePage.js":"5","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\Rejestracja.js":"6","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\NasiLekarze.js":"7","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminyPage.js":"8","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminy.js":"9"},{"size":535,"mtime":1699812902022,"results":"10","hashOfConfig":"11"},{"size":680,"mtime":1704547915474,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1699812902057,"results":"13","hashOfConfig":"11"},{"size":1097,"mtime":1702927869536,"results":"14","hashOfConfig":"11"},{"size":3853,"mtime":1703865569075,"results":"15","hashOfConfig":"11"},{"size":6415,"mtime":1704711145264,"results":"16","hashOfConfig":"11"},{"size":3353,"mtime":1703941927654,"results":"17","hashOfConfig":"11"},{"size":887,"mtime":1703938710521,"results":"18","hashOfConfig":"11"},{"size":4236,"mtime":1704550806480,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"p3g4q9",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"23"},"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\index.js",[],[],["53","54","55","56","57","58"],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\App.js",["59","60"],[],"import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, Outlet } from 'react-router-dom';\r\nimport HomePage from './HomePage';\r\nimport Rejestracja from './Rejestracja';\r\nimport NasiLekarze from './NasiLekarze';\r\nimport DostepneTerminy from './DostepneTerminy';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route path=\"/rejestracja\" element={<Rejestracja />} />\r\n        <Route path=\"/nasi-lekarze\" element={<NasiLekarze />} />\r\n        <Route path=\"/dostepne-terminy/:lekarzId\" element={<DostepneTerminy />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\reportWebVitals.js",[],[],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\TestComponent.js",[],[],["61","62","63","64","65","66"],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\HomePage.js",[],[],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\Rejestracja.js",[],[],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\NasiLekarze.js",["67","68"],[],"import React, { useState, useEffect } from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\nimport { Link, useNavigate } from 'react-router-dom';  // Zmiana importu\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport logo from './logo.png';\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  backgroundColor: '#26a197',\r\n});\r\n\r\nconst StyledToolbar = styled(Toolbar)({\r\n  display: 'flex',\r\n  justifyContent: 'flex start',\r\n});\r\n\r\nconst StyledButtonsContainer = styled('div')({\r\n  display: 'flex',\r\n  gap: '10px',\r\n  marginLeft: 'auto',\r\n});\r\n\r\nconst StyledLogo = styled('img')({\r\n  height: '70px',\r\n  margin: '10px 0',\r\n});\r\n\r\nconst NasiLekarze = () => {\r\n  const navigate = useNavigate();  // Zmiana na useNavigate\r\n  const [lekarze, setLekarze] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Pobierz dane o lekarzach z API\r\n    axios.get('http://localhost:8000/api/nasi-lekarze/')\r\n      .then(response => setLekarze(response.data))\r\n      .catch(error => console.error('Błąd pobierania danych o lekarzach:', error));\r\n  }, []);\r\n\r\n  const handleDostepneTerminyClick = (lekarzId) => {\r\n    // Przenieś użytkownika do strony z dostępnymi terminami danego lekarza\r\n    navigate(`/dostepne-terminy/${lekarzId}`);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <StyledAppBar position=\"static\">\r\n        <StyledToolbar>\r\n          <StyledLogo src={logo} alt=\"PolwroMED Logo\" />\r\n          <Typography variant=\"h6\">PolwroMED</Typography>\r\n          <StyledButtonsContainer>\r\n            <Button color=\"inherit\" component={Link} to=\"/\">\r\n              Strona Główna\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/logowanie\">\r\n              Logowanie\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/rejestracja\">\r\n              Rejestracja\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/nasi-lekarze\">\r\n              Nasi lekarze\r\n            </Button>\r\n          </StyledButtonsContainer>\r\n        </StyledToolbar>\r\n      </StyledAppBar>\r\n\r\n      <Box m={4}>\r\n        <Typography variant=\"h4\" mb={3}>\r\n          Nasi lekarze\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          {lekarze.map(lekarz => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={lekarz.id}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\">\r\n                    {`${lekarz.imie} ${lekarz.nazwisko}`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {lekarz.specjalizacja}\r\n                  </Typography>\r\n                  <Button color=\"primary\" component={Link} to={`/dostepne-terminy/${lekarz.id}`}>\r\n                    Dostępne terminy\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NasiLekarze;\r\n","C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminyPage.js",[],[],["69","70","71","72","73","74"],"C:\\Users\\barto\\PycharmProjects\\bazy danych v1.0\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminy.js",["75","76","77","78","79","80"],[],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logo from './logo.png';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\nimport { Link, useNavigate } from 'react-router-dom';  // Zmiana importu\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  backgroundColor: '#26a197',\r\n});\r\n\r\nconst StyledToolbar = styled(Toolbar)({\r\n  display: 'flex',\r\n  justifyContent: 'flex start',\r\n});\r\n\r\nconst StyledButtonsContainer = styled('div')({\r\n  display: 'flex',\r\n  gap: '10px',\r\n  marginLeft: 'auto',\r\n});\r\n\r\nconst StyledLogo = styled('img')({\r\n  height: '70px',\r\n  margin: '10px 0',\r\n});\r\n\r\nconst DostepneTerminy = () => {\r\n  const { lekarzId } = useParams();\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [dostepneTerminy, setDostepneTerminy] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (lekarzId) {\r\n      const rok = selectedDate.getFullYear();\r\n      const miesiac = selectedDate.getMonth() + 1;\r\n      const dzien = selectedDate.getDate();\r\n\r\n      axios.get(`http://localhost:8000/api/zajete-terminy/${lekarzId}/${rok}/${miesiac}/${dzien}/`)\r\n        .then(response => {\r\n          const zajeteTerminy = response.data.zajete_terminy.map(date => new Date(date));\r\n          const wszystkieTerminy = generujWszystkieTerminy(selectedDate);\r\n          const dostepneTerminy = wszystkieTerminy.filter(termin => !czyTerminJestZajety(termin, zajeteTerminy));\r\n\r\n          setDostepneTerminy(dostepneTerminy);\r\n        })\r\n        .catch(error => console.error('Błąd pobierania dostępnych terminów:', error));\r\n    }\r\n  }, [lekarzId, selectedDate]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const generujWszystkieTerminy = (selectedDate) => {\r\n    const terminy = [];\r\n    const startHour = 8;\r\n    const endHour = 16;\r\n    const intervalMinutes = 20;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      for (let minute = 0; minute < 60; minute += intervalMinutes) {\r\n        const termin = new Date(selectedDate);\r\n        termin.setHours(hour);\r\n        termin.setMinutes(minute);\r\n        terminy.push(termin);\r\n      }\r\n    }\r\n\r\n    return terminy;\r\n  };\r\n\r\n  const czyTerminJestZajety = (termin, zajeteTerminy) => {\r\n    return zajeteTerminy.some(zajetyTermin => zajetyTermin.getTime() === termin.getTime());\r\n  };\r\n\r\n return (\r\n    <div>\r\n      <StyledAppBar position=\"static\">\r\n        <StyledToolbar>\r\n          <StyledLogo src={logo} alt=\"PolwroMED Logo\" />\r\n          <Typography variant=\"h6\">PolwroMED</Typography>\r\n          <StyledButtonsContainer>\r\n            <Button color=\"inherit\" component={Link} to=\"/\">\r\n              Strona Główna\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/logowanie\">\r\n              Logowanie\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/rejestracja\">\r\n              Rejestracja\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/nasi-lekarze\">\r\n              Nasi lekarze\r\n            </Button>\r\n          </StyledButtonsContainer>\r\n        </StyledToolbar>\r\n      </StyledAppBar>\r\n      <h1>Dostępne terminy</h1>\r\n      <Calendar onChange={handleDateChange} value={selectedDate} />\r\n      {dostepneTerminy.length > 0 ? (\r\n        <div>\r\n          <h2>Dostępne terminy na {selectedDate.toLocaleDateString()}</h2>\r\n          <ul>\r\n            {dostepneTerminy.map((termin, index) => (\r\n              <li key={index}>\r\n                Data i godzina: {termin.toLocaleString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>Brak dostępnych terminów na wybrany dzień.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DostepneTerminy;\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":50,"nodeType":"95","messageId":"96","endLine":2,"endColumn":54},{"ruleId":"93","severity":1,"message":"97","line":2,"column":56,"nodeType":"95","messageId":"96","endLine":2,"endColumn":62},{"ruleId":"81","replacedBy":"98"},{"ruleId":"83","replacedBy":"99"},{"ruleId":"85","replacedBy":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","severity":1,"message":"104","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":20},{"ruleId":"93","severity":1,"message":"105","line":48,"column":9,"nodeType":"95","messageId":"96","endLine":48,"endColumn":35},{"ruleId":"81","replacedBy":"106"},{"ruleId":"83","replacedBy":"107"},{"ruleId":"85","replacedBy":"108"},{"ruleId":"87","replacedBy":"109"},{"ruleId":"89","replacedBy":"110"},{"ruleId":"91","replacedBy":"111"},{"ruleId":"93","severity":1,"message":"112","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":11},{"ruleId":"93","severity":1,"message":"113","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"114","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":12},{"ruleId":"93","severity":1,"message":"115","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":19},{"ruleId":"93","severity":1,"message":"116","line":16,"column":16,"nodeType":"95","messageId":"96","endLine":16,"endColumn":27},{"ruleId":"93","severity":1,"message":"104","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":20},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["117"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.",[],[],[],["117"],[],[],"'useHistory' is defined but never used.","'handleDostepneTerminyClick' is assigned a value but never used.",[],[],[],["117"],[],[],"'Box' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'useNavigate' is defined but never used.","no-object-constructor"]