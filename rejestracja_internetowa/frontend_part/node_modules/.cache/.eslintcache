[{"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\index.js":"1","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\App.js":"2","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\reportWebVitals.js":"3","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\HomePage.js":"4","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\Rejestracja.js":"5","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\Login.js":"6","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\PatientPanel.js":"7","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\DoctorPanel.js":"8","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\NasiLekarze.js":"9","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminy.js":"10","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\MojeWizyty.js":"11","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\api.js":"12"},{"size":552,"mtime":1703683090304,"results":"13","hashOfConfig":"14"},{"size":952,"mtime":1704889788358,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1703683090304,"results":"16","hashOfConfig":"14"},{"size":2571,"mtime":1704751922587,"results":"17","hashOfConfig":"14"},{"size":6381,"mtime":1704752110440,"results":"18","hashOfConfig":"14"},{"size":3990,"mtime":1704719177648,"results":"19","hashOfConfig":"14"},{"size":3134,"mtime":1704922367967,"results":"20","hashOfConfig":"14"},{"size":2420,"mtime":1704917987598,"results":"21","hashOfConfig":"14"},{"size":3349,"mtime":1704752019325,"results":"22","hashOfConfig":"14"},{"size":5500,"mtime":1704752019317,"results":"23","hashOfConfig":"14"},{"size":634,"mtime":1704892745383,"results":"24","hashOfConfig":"14"},{"size":154,"mtime":1704737023885,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1fuafzd",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\index.js",[],[],["65","66","67","68","69","70"],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\App.js",["71","72"],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\reportWebVitals.js",[],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\HomePage.js",[],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\Rejestracja.js",[],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\Login.js",[],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\PatientPanel.js",[],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\DoctorPanel.js",["73","74","75","76","77","78","79","80","81","82","83","84"],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\NasiLekarze.js",["85","86"],[],"import React, { useState, useEffect } from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\nimport { Link, useNavigate } from 'react-router-dom';  // Zmiana importu\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport logo from './logo.png';\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  backgroundColor: '#26a197',\r\n});\r\n\r\nconst StyledToolbar = styled(Toolbar)({\r\n  display: 'flex',\r\n  justifyContent: 'flex start',\r\n});\r\n\r\nconst StyledButtonsContainer = styled('div')({\r\n  display: 'flex',\r\n  gap: '10px',\r\n  marginLeft: 'auto',\r\n});\r\n\r\nconst StyledLogo = styled('img')({\r\n  height: '70px',\r\n  margin: '10px 0',\r\n});\r\n\r\nconst NasiLekarze = () => {\r\n  const navigate = useNavigate();  // Zmiana na useNavigate\r\n  const [lekarze, setLekarze] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Pobierz dane o lekarzach z API\r\n    axios.get('http://localhost:8000/api/nasi-lekarze/')\r\n      .then(response => setLekarze(response.data))\r\n      .catch(error => console.error('Błąd pobierania danych o lekarzach:', error));\r\n  }, []);\r\n\r\n  const handleDostepneTerminyClick = (lekarzId) => {\r\n    // Przenieś użytkownika do strony z dostępnymi terminami danego lekarza\r\n    navigate(`/dostepne-terminy/${lekarzId}`);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <StyledAppBar position=\"static\">\r\n        <StyledToolbar>\r\n          <StyledLogo src={logo} alt=\"PolwroMED Logo\" />\r\n          <Typography variant=\"h6\">PolwroMED</Typography>\r\n          <StyledButtonsContainer>\r\n            <Button color=\"inherit\" component={Link} to=\"/\">\r\n              Strona Główna\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n              Logowanie\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/rejestracja\">\r\n              Rejestracja\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/nasi-lekarze\">\r\n              Nasi lekarze\r\n            </Button>\r\n          </StyledButtonsContainer>\r\n        </StyledToolbar>\r\n      </StyledAppBar>\r\n\r\n      <Box m={4}>\r\n        <Typography variant=\"h4\" mb={3}>\r\n          Nasi lekarze\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          {lekarze.map(lekarz => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={lekarz.id}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\">\r\n                    {`${lekarz.imie} ${lekarz.nazwisko}`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {lekarz.specjalizacja}\r\n                  </Typography>\r\n                  <Button color=\"primary\" component={Link} to={`/dostepne-terminy/${lekarz.id}`}>\r\n                    Dostępne terminy\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NasiLekarze;\r\n","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\DostepneTerminy.js",["87"],[],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logo from './logo.png';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledButton = styled(Button)({\r\n  marginTop: '16px',\r\n  backgroundColor: '#26a197'\r\n});\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  backgroundColor: '#26a197',\r\n  position: 'fixed',\r\n  top: 0,\r\n  width: '100%',\r\n  zIndex: 1000,\r\n});\r\n\r\nconst StyledToolbar = styled(Toolbar)({\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n});\r\n\r\nconst StyledButtonsContainer = styled('div')({\r\n  display: 'flex',\r\n  gap: '10px',\r\n  marginLeft: 'auto',\r\n});\r\n\r\nconst StyledLogo = styled('img')({\r\n  height: '70px',\r\n  margin: '10px 0',\r\n});\r\n\r\nconst DostepneTerminy = () => {\r\n  const { lekarzId } = useParams();\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [dostepneTerminy, setDostepneTerminy] = useState([]);\r\n  const [godzinyPracy, setGodzinyPracy] = useState({ start: '08:00', koniec: '16:00' });\r\n  const [rok, setRok] = useState(selectedDate.getFullYear());\r\n  const [miesiac, setMiesiac] = useState(selectedDate.getMonth() + 1);\r\n  const [dzien, setDzien] = useState(selectedDate.getDate());\r\n\r\n  useEffect(() => {\r\n    if (lekarzId) {\r\n      axios.get(`http://localhost:8000/api/zajete-terminy-nowy/${lekarzId}/${rok}/${miesiac}/${dzien}/`)\r\n        .then(response => {\r\n          const zajeteTerminy = response.data.zajete_terminy.map(date => new Date(date));\r\n          const godzinyPracy = response.data.godziny_pracy;\r\n\r\n          setGodzinyPracy(godzinyPracy);\r\n\r\n          const wszystkieTerminy = generujWszystkieTerminy(selectedDate);\r\n          const dostepneTerminy = wszystkieTerminy.filter(termin => !czyTerminJestZajety(termin, zajeteTerminy));\r\n\r\n          setDostepneTerminy(dostepneTerminy);\r\n        })\r\n        .catch(error => console.error('Błąd pobierania informacji o godzinach pracy lekarza:', error));\r\n    }\r\n  }, [lekarzId, selectedDate, rok, miesiac, dzien]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setRok(date.getFullYear());\r\n    setMiesiac(date.getMonth() + 1);\r\n    setDzien(date.getDate());\r\n  };\r\n\r\n  const generujWszystkieTerminy = (selectedDate) => {\r\n    const terminy = [];\r\n    const startHour = parseInt(godzinyPracy.start.split(':')[0], 10);\r\n    const endHour = parseInt(godzinyPracy.koniec.split(':')[0], 10);\r\n    const intervalMinutes = 20;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      for (let minute = 0; minute < 60; minute += intervalMinutes) {\r\n        const termin = new Date(selectedDate);\r\n        termin.setHours(hour);\r\n        termin.setMinutes(minute);\r\n        terminy.push(termin);\r\n      }\r\n    }\r\n\r\n    return terminy;\r\n  };\r\n\r\n  const czyTerminJestZajety = (termin, zajeteTerminy) => {\r\n    return zajeteTerminy.some(zajetyTermin => zajetyTermin.getTime() === termin.getTime());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledAppBar position=\"static\">\r\n        <StyledToolbar>\r\n          <StyledLogo src={logo} alt=\"PolwroMED Logo\" />\r\n          <Typography variant=\"h6\">PolwroMED</Typography>\r\n          <StyledButtonsContainer>\r\n            <Button color=\"inherit\" component={Link} to=\"/\">\r\n              Strona Główna\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n              Logowanie\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/rejestracja\">\r\n              Rejestracja\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/nasi-lekarze\">\r\n              Nasi lekarze\r\n            </Button>\r\n          </StyledButtonsContainer>\r\n        </StyledToolbar>\r\n      </StyledAppBar>\r\n      <Box ml={40} mr={40} mt={12}>\r\n        <h1>Dostępne terminy</h1>\r\n        <Calendar onChange={handleDateChange} value={selectedDate} />\r\n        {dostepneTerminy.length > 0 ? (\r\n          <div>\r\n            <h2>Dostępne terminy na {selectedDate.toLocaleDateString()}</h2>\r\n            <Grid container spacing={2}>\r\n              {dostepneTerminy.map((termin, index) => (\r\n                <Grid item xs={12} md={4} key={index}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\" component=\"div\">\r\n                        Data i godzina:\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {termin.toLocaleString()}\r\n                      </Typography>\r\n                      <StyledButton\r\n                       variant=\"contained\"\r\n                       color=\"primary\">\r\n                        Rezerwacja\r\n                      </StyledButton>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        ) : (\r\n          <p>Brak dostępnych terminów na wybrany dzień.</p>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DostepneTerminy;\r\n","D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\MojeWizyty.js",["88"],[],"D:\\Pojemnik danych\\Repositories\\Pycharm\\Bazy_danych_projekt\\rejestracja_internetowa\\frontend_part\\src\\api.js",[],[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":50,"nodeType":"103","messageId":"104","endLine":2,"endColumn":54},{"ruleId":"101","severity":1,"message":"105","line":2,"column":56,"nodeType":"103","messageId":"104","endLine":2,"endColumn":62},{"ruleId":"101","severity":1,"message":"106","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":16},{"ruleId":"101","severity":1,"message":"107","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":12},{"ruleId":"101","severity":1,"message":"109","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":11},{"ruleId":"101","severity":1,"message":"110","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":12},{"ruleId":"101","severity":1,"message":"111","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":12},{"ruleId":"101","severity":1,"message":"112","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":14,"column":8,"nodeType":"103","messageId":"104","endLine":14,"endColumn":14},{"ruleId":"101","severity":1,"message":"114","line":15,"column":8,"nodeType":"103","messageId":"104","endLine":15,"endColumn":15},{"ruleId":"101","severity":1,"message":"115","line":16,"column":8,"nodeType":"103","messageId":"104","endLine":16,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":17,"column":10,"nodeType":"103","messageId":"104","endLine":17,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":18,"column":10,"nodeType":"103","messageId":"104","endLine":18,"endColumn":14},{"ruleId":"101","severity":1,"message":"117","line":12,"column":10,"nodeType":"103","messageId":"104","endLine":12,"endColumn":20},{"ruleId":"101","severity":1,"message":"118","line":48,"column":9,"nodeType":"103","messageId":"104","endLine":48,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":72,"column":6,"nodeType":"121","endLine":72,"endColumn":51,"suggestions":"122"},{"ruleId":"101","severity":1,"message":"123","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":20},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["124"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.","'Calendar' is defined but never used.","'useParams' is defined but never used.","'logo' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Button' is defined but never used.","'styled' is defined but never used.","'useHistory' is defined but never used.","'handleDostepneTerminyClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generujWszystkieTerminy'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'mojeWizyty' is assigned a value but never used.","no-object-constructor",{"desc":"126","fix":"127"},"Update the dependencies array to be: [lekarzId, selectedDate, rok, miesiac, dzien, generujWszystkieTerminy]",{"range":"128","text":"129"},[2416,2461],"[lekarzId, selectedDate, rok, miesiac, dzien, generujWszystkieTerminy]"]